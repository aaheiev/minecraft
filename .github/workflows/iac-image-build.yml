name: Build iac image
on:
#  schedule:
#    - cron: '33 22 * * *'
  push:
    branches:
      - iac-ci
    # Publish semver tags as releases.
#    tags: [ 'v*.*.*' ]
#  pull_request:
#    branches: [ "main" ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}-iac

jobs:
  build:
    name: Build image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set version
        id: set-version
        run: |
          VERSION="0.0.${{ github.run_number }}-dev"
          echo "VERSION=$(echo $VERSION)" >> $GITHUB_ENV
          echo "VERSION=$(echo $VERSION)" >> $GITHUB_OUTPUT
          echo "VERSION=$(echo $VERSION)"

      # Install the cosign tool except on PR
      # https://github.com/sigstore/cosign-installer
      - name: Install cosign
#        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@v3.5.0

      # Set up BuildKit Docker container builder to be able to build
      # multi-platform images and export cache
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
#        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}"

      - name: Show image url
        run: |
          echo "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.set-version.outputs.VERSION }}"

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: docker/base/Dockerfile
          push: true
          tags: "${{ env.IMAGE_NAME }}:${{ steps.set-version.outputs.VERSION }}"
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Sign the resulting Docker image digest except on PRs.
      # This will only write to the public Rekor transparency log when the Docker
      # repository is public to avoid leaking data.  If you would like to publish
      # transparency data even for private images, pass --force to cosign below.
      # https://github.com/sigstore/cosign
#      - name: Sign the published Docker image
#        if: ${{ github.event_name != 'pull_request' }}
#        env:
#          # https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions#using-an-intermediate-environment-variable
#          TAGS: ${{ steps.meta.outputs.tags }}
#          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        # This step uses the identity token to provision an ephemeral certificate
        # against the sigstore community Fulcio instance.
#        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}
